# This file contains the credentials for the voice & chat platforms
# which your bot is using.
# https://rasa.com/docs/rasa/messaging-and-voice-channels

rest:
#  # you don't need to provide anything here - this channel doesn't
#  # require any credentials


#facebook:
#  verify: "<verify>"
#  secret: "<your secret>"
#  page-access-token: "<your page access token>"

#slack:
#  slack_token: "<your slack token>"
#  slack_channel: "<the slack channel>"
#  slack_signing_secret: "<your slack signing secret>"

socketio:
  user_message_evt: user_uttered
  bot_message_evt: bot_uttered
  session_persistence: false

#mattermost:
#  url: "https://<mattermost instance>/api/v4"
#  token: "<bot token>"
#  webhook_url: "<callback URL>"

# This entry is needed if you are using Rasa Enterprise. The entry represents credentials
# for the Rasa Enterprise "channel", i.e. Talk to your bot and Share with guest testers.
rasa:
  url: "http://localhost:5002/api"

# Telegram configuration (DISABLED - token invalid)
# To set up your Telegram bot:
# 1. Message @BotFather on Telegram to create a new bot
# 2. Get your bot token from BotFather
# 3. Replace YOUR_BOT_TOKEN with your actual bot token
# 4. Set your webhook URL or use polling
# telegram:
#   access_token: "${TELEGRAM_ACCESS_TOKEN}"
#   verify: "${TELEGRAM_VERIFY_TOKEN}"
#   webhook_url: "${TELEGRAM_WEBHOOK_URL}"
  
# Alternative Telegram configuration for polling (no webhook needed)
# telegram:
#   access_token: "YOUR_BOT_TOKEN"
#   verify: "YOUR_VERIFY_TOKEN"
#   use_mtproto2: true

# WhatsApp Business API (optional additional channel)
# whatsapp:
#   verify: "your-verify-token"
#   secret: "your-app-secret"
#   page-access-token: "your-page-access-token"
